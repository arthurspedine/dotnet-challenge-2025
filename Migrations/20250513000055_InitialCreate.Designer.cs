// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Motoflow.Data;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Motoflow.Migrations
{
    [DbContext(typeof(OracleDbContext))]
    [Migration("20250513000055_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Motoflow.Models.Area", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Identificador")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)");

                    b.Property<long>("PatioId")
                        .HasColumnType("NUMBER(19)");

                    b.HasKey("Id");

                    b.HasIndex("PatioId");

                    b.ToTable("MOTOFLOW_AREAS", (string)null);
                });

            modelBuilder.Entity("Motoflow.Models.HistoricoMoto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AreaId")
                        .HasColumnType("NUMBER(19)");

                    b.Property<DateTime>("DataEntrada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("DataSaida")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<long>("MotoId")
                        .HasColumnType("NUMBER(19)");

                    b.Property<string>("ObservacaoEntrada")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)");

                    b.Property<string>("ObservacaoSaida")
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("MotoId", "DataSaida")
                        .IsUnique()
                        .HasFilter("\"DataSaida\" IS NULL");

                    b.ToTable("MOTOFLOW_HISTORICOS_MOTOS", (string)null);
                });

            modelBuilder.Entity("Motoflow.Models.Moto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Chassi")
                        .HasMaxLength(17)
                        .HasColumnType("NVARCHAR2(17)");

                    b.Property<string>("Placa")
                        .HasMaxLength(7)
                        .HasColumnType("NVARCHAR2(7)");

                    b.Property<string>("QRCode")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("NVARCHAR2(5)");

                    b.HasKey("Id");

                    b.HasIndex("Chassi")
                        .IsUnique()
                        .HasFilter("\"Chassi\" IS NOT NULL");

                    b.HasIndex("Placa")
                        .IsUnique()
                        .HasFilter("\"Placa\" IS NOT NULL");

                    b.HasIndex("QRCode")
                        .IsUnique()
                        .HasFilter("\"QRCode\" IS NOT NULL");

                    b.ToTable("MOTOFLOW_MOTOS", (string)null);
                });

            modelBuilder.Entity("Motoflow.Models.Patio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR2(150)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR2(150)");

                    b.HasKey("Id");

                    b.ToTable("MOTOFLOW_PATIOS", (string)null);
                });

            modelBuilder.Entity("Motoflow.Models.Area", b =>
                {
                    b.HasOne("Motoflow.Models.Patio", "Patio")
                        .WithMany("Areas")
                        .HasForeignKey("PatioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("Motoflow.Models.HistoricoMoto", b =>
                {
                    b.HasOne("Motoflow.Models.Area", "Area")
                        .WithMany("Historicos")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Motoflow.Models.Moto", "Moto")
                        .WithMany("Historicos")
                        .HasForeignKey("MotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Moto");
                });

            modelBuilder.Entity("Motoflow.Models.Area", b =>
                {
                    b.Navigation("Historicos");
                });

            modelBuilder.Entity("Motoflow.Models.Moto", b =>
                {
                    b.Navigation("Historicos");
                });

            modelBuilder.Entity("Motoflow.Models.Patio", b =>
                {
                    b.Navigation("Areas");
                });
#pragma warning restore 612, 618
        }
    }
}
